// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";

function assert$prime(condition, message) {
  if (condition) {
    return /* () */0;
  } else {
    return Pervasives.failwith(message);
  }
}

function split$prime(_n, _xs, _ys) {
  while(true) {
    var ys = _ys;
    var xs = _xs;
    var n = _n;
    if (ys) {
      var yss = ys[1];
      var y = ys[0];
      var match = n === 0;
      if (match) {
        return /* tuple */[
                xs,
                /* :: */[
                  y,
                  yss
                ]
              ];
      } else {
        _ys = yss;
        _xs = List.concat(/* :: */[
              xs,
              /* :: */[
                /* :: */[
                  y,
                  /* [] */0
                ],
                /* [] */0
              ]
            ]);
        _n = n - 1 | 0;
        continue ;
      }
    } else {
      return /* tuple */[
              xs,
              /* [] */0
            ];
    }
  };
}

function split(n, xs) {
  return split$prime(n, /* [] */0, xs);
}

export {
  assert$prime ,
  split$prime ,
  split ,
  
}
/* No side effect */
